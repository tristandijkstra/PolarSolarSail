import numpy as np
import matplotlib.pyplot as plt

# Constants
AU = 1.496e11  # m
G = 6.674e-11  # m^3/kg/s^2
M_sun = 1.989e30  # kg
year = 365.25 * 24 * 3600  # seconds

# Inputs
sail_area = 15000  # m^2 & can change
reflectivity = 0.95
mass = 762.1  # kg
initial_inclination = 0  # degrees
final_inclination = 90  # degrees
distance_to_sun = 0.48 * AU  # m

# Functions
def solar_pressure_at_1AU():
    return 4.56e-6  # N/m^2

def characteristic_acceleration():
    return 2e-3  # m/s^2

def sail_mass():
    return sail_area * 10  # kg, assuming 10 kg/m^2 sail mass

def delta_v_from_thrust(thrust, time):
    # Calculate the force generated by the solar sail
    pressure = solar_pressure_at_1AU()
    force = thrust * (sail_area * reflectivity) * (1 - np.exp(-time * characteristic_acceleration())) / (mass + sail_mass())

    # Calculate the resulting delta-v
    delta_v = force * time / (mass + sail_mass())

    return delta_v

def inclination_change_time(thrust):
    # Calculate the initial velocity required for the inclination change
    v_initial = np.sqrt(G * M_sun / distance_to_sun) * np.cos(np.deg2rad(initial_inclination))

    # Calculate the required delta-v
    delta_v = 2 * v_initial * np.sin(np.deg2rad(final_inclination) / 2)

    # Calculate the time required for the inclination change
    time = delta_v / delta_v_from_thrust(thrust, 1*year)

    return time / year

# Calculate the inclination change time for different thrust values
thrust_values = np.array([0.2, 0.4, 0.6, 0.8])  # N
times = []
for thrust in thrust_values:
    times.append(inclination_change_time(thrust))

# Plot the results
plt.plot(thrust_values, times)
plt.xlabel('Thrust (N)')
plt.ylabel('Time to change inclination (years)')
plt.show()
